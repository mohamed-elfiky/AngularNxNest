variables:
  ACRConnection: 'g4sxJoO6VMx/xHRLY4P5=Q9vXvFsvByY'
  RepositoryName: 'ps_catalog_base'
  ACRName: 'testingintouch.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: 'r$(Build.SourceBranchName).n$(Build.BuildNumber).i$(Build.BuildId)'

trigger:
  branches:
    include:
      - main
      - release/*
  paths:
    exclude:
      - 'apps/demo/*'
      - 'apps/api/*'

stages: 
- stage: 'Build'
  displayName: 'Build and push'
  jobs: 
  - job: base_image
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '12.x'
      displayName: 'Install Node.js'
    
    - script: npm install -g jest-cli @nrwl/cli
  
    - bash: |
        declare -A arr
        for i in $(nx affected:apps --base=main~1 --head=HEAD |  grep -E ' - (\w|-|\d|_)+'  | sed -E 's/ - / /g' ); do
          arr[$i]=$i
        done

        if [[ ${arr['api']} ]]; then echo "##vso[task.setvariable variable=BuildAPI; isOutput=true]True"; fi
        if [[ ${arr['demo']} ]]; then echo "##vso[task.setvariable variable=BuildDemo; isOutput=true ]True"; fi
       
        echo '$(variables.BuildAPI)'
      displayName: get affected apps
   

    # - task: Docker@2
    #   displayName: "Build and push base image to ACR"
    #   inputs:
    #     containerRegistry: 'test'
    #     repository: '$(RepositoryName)'
    #     command: 'buildAndPush'
    #     Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
    #     tags: '$(tag)'
   
  - job: 'API'
    dependsOn: base_image
    condition: and(succeeded(), eq( dependencies.base_image.outputs['BuildAPI'] , 'True'))
    steps:  
      - bash: | 
          echo 'run'
